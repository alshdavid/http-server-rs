name: Release

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on: 
  push:
    branches:
      - "main"

jobs:
  build_linux_amd64:
    name: üê• Linux AMD64
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: source ./.github/setup/just/install.bash
      - run: source ./.github/setup/rust/install.bash
      - env: { os: "linux", arch: "amd64", profile: "release" }
        run: just build
      - uses: actions/upload-artifact@v4
        with:
          name: http-server-linux-amd64
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  build_linux_arm64:
    name: üê• Linux ARM64
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
      - run: source ./.github/setup/just/install.bash
      - run: source ./.github/setup/rust/install.bash
      - env: { os: "linux", arch: "arm64", profile: "release" }
        run: just build
      - uses: actions/upload-artifact@v4
        with:
          name: http-server-linux-arm64
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  build_macos_amd64:
    name: üçé MacOS AMD64
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - run: source ./.github/setup/just/install.bash
      - run: source ./.github/setup/rust/install.bash
      - env: { os: "macos", arch: "amd64", profile: "release" }
        run: just build
      - uses: actions/upload-artifact@v4
        with:
          name: http-server-macos-amd64
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  build_macos_arm64:
    name: üçé MacOS ARM64
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - run: source ./.github/setup/just/install.bash
      - run: source ./.github/setup/rust/install.bash
      - env: { os: "macos", arch: "arm64", profile: "release" }
        run: just build
      - uses: actions/upload-artifact@v4
        with:
          name: http-server-macos-arm64
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  build_windows_amd64:
    name: üü¶ Windows AMD64
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
      - { shell: powershell, run: . ./.github/setup/just/install.ps1 }
      - { shell: powershell, run: . ./.github/setup/rust/install.ps1 }
      - env: { os: "windows", arch: "amd64", profile: "release" }
        run: just build
      - uses: actions/upload-artifact@v4
        with:
          name: http-server-windows-amd64
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  build_windows_arm64:
    name: üü¶ Windows ARM64 (Cross Compiled)
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
      - { shell: powershell, run: . ./.github/setup/just/install.ps1 }
      - { shell: powershell, run: . ./.github/setup/rust/install.ps1 }
      - env: { os: "windows", arch: "arm64", profile: "release" }
        run: just build
      - uses: actions/upload-artifact@v4
        with:
          name: http-server-windows-arm64
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  publish-github-release:
    name: "üîÑ Publish Github Release"
    runs-on: ubuntu-latest
    needs: 
      - build_linux_amd64
      - build_linux_arm64
      - build_macos_amd64
      - build_macos_arm64
      - build_windows_amd64
      - build_windows_arm64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Publish` Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="$(date -u +"v%Y.%m.%d.%H%M").${GITHUB_SHA::4}"
          echo "Tag: ${TAG}"

          gh release create $TAG  --draft --notes "Automatically built binaries"
          gh release edit $TAG --title "üöÄ Latest"

          gh release upload $TAG http-server-linux-amd64/http-server-linux-amd64.tar.gz
          gh release upload $TAG http-server-linux-arm64/http-server-linux-arm64.tar.gz
          gh release upload $TAG http-server-macos-amd64/http-server-macos-amd64.tar.gz
          gh release upload $TAG http-server-macos-arm64/http-server-macos-arm64.tar.gz
          gh release upload $TAG http-server-windows-amd64/http-server-windows-amd64.tar.gz
          gh release upload $TAG http-server-windows-arm64/http-server-windows-arm64.tar.gz
          
          gh release edit $TAG --draft=false
